/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* Border & Padding will now be included in height & width measurements */
}

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: 1rem;
  line-height: 1.7;
  color: #777777;
  padding: 30px;  /* Creates 'border' around entire web page! */
}

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url('../img/hero.jpg');
  background-size: cover;
  background-position: top;  /* Ensures that top of image always stays at top of container on all viewport sizes */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);  /* Specify coordinates which define the polygon */
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;  /* The browser will automatically scale the width accordingly */
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #FFFFFF;
  text-transform: uppercase;
  backface-visibility: hidden;  /* Guards against animation 'shakiness' */
  margin-bottom: 60px;
}

.heading-primary-main {
  display: block;
  font-size: 3.75rem;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;  /* Animation being referenced */
  animation-duration: 1s;  /* How long animation should take */
  animation-timing-function: ease-out;  /* This determines how the animation should proceed */

  /* animation-iteration-count: 3; */
  /* animation-delay: 3s; */
}

.heading-primary-sub {
  display: block;
  font-size: 1.25rem;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {  /* Percentages correspond to times during the animation */
  0% {  /* Before the animation starts */
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {  /* You can include ANY percentage you want! */
    transform: translateX(10px);
  }

  100% {  /* When the animation finishes */
    opacity: 1;
    transform: translate(0);  /* Setting it to 0 means it will look the way it does normally */
  }
}

@keyframes moveInRight {  /* Percentages correspond to times during the animation */
  0% {  /* Before the animation starts */
    opacity: 0;
    transform: translateX(100px);
  }

  80% {  /* You can include ANY percentage you want! */
    transform: translateX(-10px);
  }

  100% {  /* When the animation finishes */
    opacity: 1;
    transform: translate(0);  /* Setting it to 0 means it will look the way it does normally */
  }
}

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all 0.2s;
  position: relative;  /* Reference for ::after psuedo-element */
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  color: #777777;
  background-color: #FFFFFF;
}

.btn::after {
  content: '';  /* Content property must be specified for the ::after psuedo-element to appear */
  display: inline-block;  /* Display property must also be specified */
  width: 100%;
  height: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;  /* Places ::after psuedo-element behind the button */
  transition: all 0.4s;
}

.btn-white::after {
  background-color: #FFFFFF;
}

.btn:hover::after {  /* The ::after psuedo-element is being applied in the hover state */
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}
